% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ClonalMuFunctions.R
\name{LL_meanNb_nb.df}
\alias{LL_meanNb_nb.df}
\title{Log Likelihood Heat Map with Negative Binomial as Initial Distribution}
\usage{
LL_meanNb_nb.df(
  df,
  listClonal,
  lambda_values,
  R0,
  mu_values,
  maxMuGen,
  maxFS,
  maxIni,
  k
)
}
\arguments{
\item{df}{Data set with first column named "ClonalMu" recording number of clonal mutations, and the second column named "freq" recording number of times the clonal mutation is observed}

\item{listClonal}{Returned list from function list_clonal with same parameters}

\item{lambda_values}{A sequence of mean of Poisson distribution}

\item{R0}{Reproduction number, a positive number}

\item{mu_values}{A sequence of mutation rate}

\item{maxMuGen}{Maximum number of mutant lineages being calculated}

\item{maxFS}{Maximum number of final sizes being calculated, equal to or smaller than maxMuGen}

\item{maxIni}{Maximum initial population size being calculated}

\item{k}{dispersion paramter of negative binomial distribution}
}
\value{
A data frame with lambda, mean N, mean Nb, mu, and corresponding probabilities of getting the set of parameters given data points in the input data set
}
\description{
This function calculates the log likelihood of getting the observed data
points in the provided data set across a set of parameters lambda, mean N,
transmission bottleneck Nb, and mu. Since the actual distribution of initial
population size N does not follow a perfect negative binomial distribution
but an altered version of NB distribution, we are also interested in
estimating the most likely mean N, which might be slightly different from
lambda. We can also estimate the mean of transmission bottleneck size Nb
by applying a binomial distribution to the initial population size.
}
\examples{
LL_meanNb_nb.df(sample_data, listClonal, seq(0.1, 7, by = 0.2), 1.6, seq(0.1, 2, by = 0.2), 50, 50, 10, 0.1)
LL_meanNb_nb.df(flu_data, listClonal, seq(0.1, 1.4, by = 0.1), 10, seq(1.2, 2.5, by = 0.1), 60, 50, 8, 0.5)
}
